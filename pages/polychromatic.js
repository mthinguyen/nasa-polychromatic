import { useEffect, useState } from "react"
import axios from "axios";
import Image from 'next/image'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import Head from 'next/head'


export default function Polychromatic() {

    const [image, setImage] = useState([]);
    const [images, setImages] = useState([]);
    const [time, setTime] = useState('loading');
    const [date, setDate] = useState('');
    const [coords, setCoords] = useState({});

    const url = `https://epic.gsfc.nasa.gov/api/natural?api_key=${process.env.NEXT_PUBLIC_apiKey}`

    const getPolychromaticData = async () => {
        const res = await axios.get(url);
        const data = await res.data;
        console.log(data)

        const caption = data[0].caption;
        const date = data[0].date.split(" ")[0];
        const date_formatted = date.replaceAll("-", "/")
        console.log(date_formatted);

        let times = [];
        let images = [];

        for (let i = 0; i < data.length; i++) {
            let time = data[i].date.split(" ")[1];
            let coords = data[i].centroid_coordinates;
            let imagePath = data[i].image;
            let image = `https://epic.gsfc.nasa.gov/archive/natural/${date_formatted}/png/${imagePath}.png`

            times.push(time);
            images.push({
                image: image,
                time: time,
                coords: coords
            })
        }

        setDate(date);
        setImages(images);
        setImage(images[0].image);
        setTime(times[0]);
        setCoords([images[0].coords.lat, images[0].coords.lon])
        console.log(image)
    }

    useEffect(() => {
        getPolychromaticData();
    }, [])


    return (
        <>
            <Head>
                <title>Polychromatic</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/launch.png" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
                <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@700&display=swap" rel="stylesheet"></link>
                <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap" rel="stylesheet" />

            </Head>
            <main className={styles.main}>
                <div className={styles.container}>

                    <div>
                        <h1>Polychromatic Earth</h1>
                    </div>

                    {/* Earth and Gru */}
                    <div className={styles.earthGru}>
                        <Image className={styles.earth} src={image} alt={image} width={400} height={400} id={styles.imageId} />
                        <Image src="/gru-2.png" width="200" height="200" ></Image>
                    </div>
                    {/* End of Earth and Gru */}

                    <div className={styles.currentInfo}>
                        <div className={styles.currentHeader}><h2>Current</h2></div>
                        <div className={styles.time}>Time: {time}</div>
                        <div className={styles.coords}>Latitude: {coords[0]}</div>
                        <div className={styles.coords}>Longitude: {coords[1]} </div>
                    </div>

                    <table className={styles.infoTable}>
                        <thead>
                            <tr>
                                <th>Time</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>View</th>
                            </tr>
                        </thead>

                        <tbody>
                            {
                                images.map((e, i) => {
                                    return (
                                        <tr key={i}>
                                            <td>{e.time}</td>
                                            <td>{e.coords.lat}</td>
                                            <td>{e.coords.lon}</td>
                                            {/* <td><Image src={e.image} alt={i} width={100} height={100} /></td> */}

                                            <td>
                                                <a>
                                                    <button className={styles.button} onClick={() => {
                                                        setImage(e.image);
                                                        setTime(e.time);
                                                        setCoords([e.coords.lat, e.coords.lon])
                                                        console.log(images[i].image)
                                                        document.body.scrollIntoView();
                                                    }}>View</button>
                                                </a>
                                            </td>
                                        </tr>
                                    )
                                })
                            }
                        </tbody>
                    </table>

                    <div className={styles.button}><Link href="/" >
                        Go back to Gallery</Link>
                    </div>

                </div>
            </main>
        </>
    )
}